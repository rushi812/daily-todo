{"version":3,"sources":["firebase/firebase.js","routes/ProtectedRoutes.js","utils/index.js","modules/Login/Login.js","modules/Login/LoginContainer.js","redux/authActions.js","redux/actionTypes.js","modules/Signup/Signup.js","modules/Signup/SignupContainer.js","utils/api.js","redux/todoActions.js","shared/Dialog/PendingTodoDialog.js","modules/Home/TodoList/TodoListItem/TodoListItem.js","shared/Dialog/ConfirmDeleteDialog.js","modules/Home/TodoList/TodoListItem/TodoListItemContainer.js","modules/Home/TodoList/TodoList.js","shared/NoData.js","modules/Home/TodoList/TodoListContainer.js","redux/previousdayActions.js","modules/Home/AddTodo/AddTodo.js","modules/Home/AddTodo/AddTodoContainer.js","shared/DrawerContent/DrawerContent.js","shared/Dialog/SettingsDialog.js","shared/DrawerContent/DrawerContentContainer.js","redux/notificationActions.js","modules/NavBar/NavBar.js","modules/NavBar/NavBarContainer.js","modules/Home/Home.js","modules/Home/HomeContaciner.js","routes/Routes.js","redux/authReducer.js","redux/todoReducers.js","redux/notificationReducer.js","rootReducer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","ComposedComponent","Authentication","this","props","history","userId","uid","localStorage","getItem","auth","onAuthStateChanged","currentUser","setItem","push","Component","defaultProps","connect","state","withRouter","noop","previousDay","moment","Date","subtract","format","lastFriday","formatedTime","t","formatedDate","d","notify","bodyText","options","body","window","Notification","permission","requestPermission","then","alert","checkForTime","data","text","extractedTime","match","time","slice","replace","toLowerCase","todoText","split","trim","notifyMe","m","e","currentTime","defaultTime","h","day","hours","minutes","seconds","set","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","justifyContent","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","loginButtonHandler","initialValues","validationSchema","classes","Container","component","maxWidth","className","Avatar","Typography","variant","validateOnChange","onSubmit","errors","touched","noValidate","autoComplete","Grid","container","item","xs","name","type","label","fullWidth","error","email","Boolean","helperText","as","TextField","password","Button","color","justify","Link","href","blockUi","minHeight","LoginContainer","signInLoading","signin","Yup","shape","required","tag","blocking","loader","active","renderChildren","loginCred","user","dispatch","payload","signInWithEmailAndPassword","Signup","signupButtonHandler","SignupContainer","signUpLoading","signup","createUserWithEmailAndPassword","db","date","a","async","collection","doc","get","querySnapshot","todoList","forEach","id","catch","err","console","log","getResponse","currentDate","createdAt","add","isDone","docRef","delete","todo","update","mTime","eTime","fetchTodos","api","button","red","PendingTodoDialog","yesButtonHandler","noButtonHandler","open","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","Box","DialogContent","DialogContentText","DialogActions","onClick","root","background","padding","momentTag","fontSize","inline","listItemTextLineThrough","textDecoration","fontStyle","card","marginBottom","cardBackground","deleteButton","greenButton","chip","chipIcon","isHidden","TodoCard","deleteTodoButtonHandler","markTodoDoneButtonHandler","editTodoButtonHandler","calendarStrings","refresh","createdTime","allowEditTill","useEffect","List","ListItem","listItem","Tooltip","title","arrow","IconButton","event","ListItemText","primary","calendar","ListItemSecondaryAction","isSameOrAfter","isBefore","toDate","Divider","ConfirmDeleteDialog","handleClose","confirmDeleteDialogHandler","startIcon","TodoListItemContainer","deleteTodo","markDone","editTodo","useState","openDeleteDialog","setOpenDeleteDialog","contactId","setContactId","TodoListItem","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","createdDate","copyButton","maxHeight","overflow","TodoList","todos","copyButtonHandler","copyBtnText","disabled","map","key","NoData","role","aria-label","TodoListContainer","addPreviousDayTodos","noAddPreviousDayTodos","toastClose","openPendingTodo","closePendingTodo","copyToClipboard","previousDayTodos","fetchTodoLoading","deleteTodoLoading","openPendingTodoDialog","todosRef","useRef","setRefresh","CronJob","prevRefresh","start","current","filter","length","formatedTodos","cb","toast","info","position","POSITION","BOTTOM_RIGHT","autoClose","css","bodyClassName","progressClassName","copyTodoToast","copy","copiedTodo","inputForm2","marginLeft","flex","iconButton","divider","height","headerContainer","bottom","gridTemplateColumns","formCancelEdit","buttons","cancel","editButtons","formDivider","AddTodo","addTodoButtonHandler","updateTodoButtonHandler","cancelEditButtonHandler","isEdit","enableReinitialize","validateOnBlur","resetForm","Fab","size","AddTodoContainer","addTodo","updateTodo","cancelEdit","selectedTodo","showTodoNotification","success","toolbar","dateGridOne","dateDigit","textAlign","settingsContainer","borderLeft","settingButton","dateGridTwo","paddingTop","borderRadius","listItemDatePicker","zoom","nextPrevButtons","DrawerContent","settingsButtonHandler","logoutButtonHandler","handleDateChange","goToTodayDateHandler","prevButtonHandler","nextButtonHandler","undefined","ListItemIcon","utils","DateFnsUtils","muiPickerUtilsContainer","disableToolbar","value","maxDate","onChange","KeyboardButtonProps","PropTypes","timePicker","SettingDialog","saveButtonHandler","handleMorningTimeChange","handleEveningTimeChange","changedMorningTime","changedEveningTime","ampm","DrawerContentContainer","dateChange","morningTimeChange","eveningTimeChange","logout","updateNotificationTime","addPendingPreviousDayTodos","openSettingsDialog","setOpenSettingsDialog","newDate","SettingsDialog","notification","signOut","drawer","flexShrink","drawerPaper","content","flexGrow","default","NavBar","Drawer","anchor","NavBarContainer","marginRight","breakpoints","up","Home","HomeContaciner","fetchLoggedInUserData","fetchPreviousDayTodos","fetchNotificationTime","setNotificationTime","prevMTimeRef","prevETimeRef","morningTime","eveningTime","res","Routes","path","exact","Auth","signOutLoading","signUpError","signInError","signOutError","authReducer","action","clear","addTodoLoading","markTodoDoneLoading","updateTodoLoading","fetchPreviouDayTodoLoading","todoReducer","sort","b","updateNotificationTimeLoading","fetchNotificationTimeLoading","setNotificationTimeLoading","notificationReducer","rootReducer","combineReducers","store","createStore","compose","composeWithDevTools","applyMiddleware","thunk","createPromise","promiseTypeSuffixes","App","closeButton","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71fb467d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyA8skqJ16VwMjLCoCC2WEj3AqRNGswiWqw',\n  authDomain: 'daily-todo-app-75539.firebaseapp.com',\n  databaseURL: 'https://daily-todo-app-75539.firebaseio.com',\n  projectId: 'daily-todo-app-75539',\n  storageBucket: 'daily-todo-app-75539.appspot.com',\n  messagingSenderId: '711116382020',\n  appId: '1:711116382020:web:81d0182e39dda4c9e24111',\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport firebase from '../firebase/firebase';\n\nexport default function (ComposedComponent) {\n  class Authentication extends Component {\n    componentDidMount() {\n      const { history, userId } = this.props;\n      const uid = localStorage.getItem('uid');\n      firebase.auth().onAuthStateChanged(currentUser => {\n        if (currentUser) {\n          if (!userId) {\n            localStorage.setItem('uid', uid);\n          } else if (userId) {\n            localStorage.setItem('uid', userId);\n          }\n        } else {\n          history.push('/login');\n        }\n      });\n    }\n\n    render() {\n      return (\n        <>\n          <ComposedComponent />\n        </>\n      );\n    }\n  }\n\n  Authentication.propTypes = {\n    history: PropTypes.instanceOf(Object).isRequired,\n    userId: PropTypes.string,\n  };\n\n  Authentication.defaultProps = {\n    userId: '',\n  };\n\n  const mapstateToProps = state => ({\n    userId: state.auth.userId,\n  });\n\n  return connect(mapstateToProps, null)(withRouter(Authentication));\n}\n","/* eslint-disable no-alert */\nimport { toast } from 'react-toastify';\nimport { css } from 'glamor';\nimport moment from 'moment';\n\nexport const noop = () => { };\n\nexport const previousDay = moment(moment(new Date()).subtract(1, 'days')).format('DDMMYYYY');\nexport const lastFriday = moment(moment(new Date()).subtract(3, 'days')).format('DDMMYYYY');\n\nexport const formatedTime = t => (t ? moment(t).format('LT') : moment().format('LT'));\nexport const formatedDate = d => moment(d).format('LL');\n\nexport const todoFormatter = data => (\n  data.map(todo => (\n    (todo.isDone)\n      ? `\\n Done: ${formatedDate(todo.createdAt)} -- ${todo.todo}`\n      : `\\n Pending: ${formatedDate(todo.createdAt)} -- ${todo.todo}`))\n);\n\nexport const copyTodoToast = (date, cb) => {\n  toast.info(`Todos for ${date} copied to clipboard`, {\n    position: toast.POSITION.BOTTOM_RIGHT,\n    autoClose: 3000,\n    onClose: () => cb(),\n    className: css({\n      background: 'dodgreblue !important',\n    }),\n    bodyClassName: css({\n      fontSize: '1rem',\n      color: '#fff',\n    }),\n    progressClassName: css({\n      background: '#ddd !important',\n    }),\n  });\n};\n\nexport const addTodoToast = body => {\n  toast.success(`Todo \"${body}\" added today at ${moment(new Date()).format('LT')}`, {\n    position: toast.POSITION.BOTTOM_RIGHT,\n    autoClose: 3000,\n    className: css({\n      background: '#7986cb !important',\n    }),\n    bodyClassName: css({\n      fontSize: '1rem',\n      color: '#eee',\n    }),\n    progressClassName: css({\n      background: '#eee !important',\n    }),\n  });\n};\n\nfunction notify(bodyText) {\n  const title = 'DAILY TODO';\n  const options = {\n    body: bodyText,\n  };\n  if (!('Notification' in window)) {\n    alert('This browser does not support desktop notification');\n  } else if (Notification.permission === 'granted') {\n    const notification = new Notification(title, options);\n  } else if (Notification.permission !== 'denied') {\n    Notification.requestPermission().then(permission => {\n      if (permission === 'granted') {\n        const notification = new Notification(title, options);\n      }\n    });\n  }\n}\n\nexport const notifyAt = (t, text) => {\n  if ((t === moment().format('ha')) || (t === moment().format('h:mma'))) {\n    notify(text);\n  }\n};\n\nexport const checkForTime = data => {\n  const extractedTime = data.match(/at\\s((\\d)|(\\d\\s)|(\\d{1,2}:\\d{2})|(\\d{1,2}:\\d{2}\\s))(pm|am)/gi);\n  const time = extractedTime && extractedTime[0].slice(3).replace(' ', '').toLowerCase();\n  const todoText = data.split(extractedTime)[0].trim();\n  if (time) {\n    notifyAt(time, todoText);\n  }\n};\n\nexport const notifyMe = (m, e) => {\n  const currentTime = formatedTime();\n  if (currentTime > m && currentTime <= '12:00 PM') {\n    notify('Good Morning! Lets add some todos :)');\n  } else if (m === currentTime) {\n    notify('Good Morning! Lets add some todos :)');\n  } else if (e === currentTime) {\n    notify('Good Evening! Please submit the todos :)');\n  }\n};\n\nexport const defaultTime = h => {\n  const time = h;\n  const day = moment();\n  const [hours, minutes, seconds] = time.split(':');\n  day.set({ hours, minutes, seconds });\n  return moment(day).format();\n};\n","import React from 'react';\nimport { Form, Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nimport { noop } from '../../utils';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login({\n  loginButtonHandler,\n  initialValues,\n  validationSchema,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign In\n        </Typography>\n        <Formik\n          validateOnChange\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={loginButtonHandler}\n        >\n          {({ errors, touched }) => (\n            <Form className={classes.form} noValidate autoComplete=\"off\">\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    name=\"email\"\n                    type=\"input\"\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    fullWidth\n                    autoComplete=\"email\"\n                    error={touched.email && Boolean(errors.email)}\n                    helperText={errors.email ? errors.email : ''}\n                    as={TextField}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    label=\"Password\"\n                    fullWidth\n                    autoComplete=\"password\"\n                    error={touched.password && Boolean(errors.password)}\n                    helperText={errors.password ? errors.password : ''}\n                    as={TextField}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign In\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"/signup\" variant=\"body2\">\n                    Create new account? Sign up\n                  </Link>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </Container>\n  );\n}\n\nLogin.propTypes = {\n  loginButtonHandler: PropTypes.func,\n  initialValues: PropTypes.instanceOf(Object),\n  // validationSchema: PropTypes.instanceOf(Object),\n};\n\nLogin.defaultProps = {\n  loginButtonHandler: noop,\n  initialValues: {},\n  // validationSchema: {},\n};\n\nexport default Login;\n","/* eslint-disable no-shadow */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport { Loader } from 'react-loaders';\nimport 'loaders.css/loaders.min.css';\n\nimport { signin } from '../../redux/authActions';\nimport { noop } from '../../utils';\n\nimport Login from './Login';\n\nconst useStyles = makeStyles({\n  blockUi: {\n    minHeight: '100vh',\n  },\n});\n\nconst LoginContainer = ({\n  history,\n  signInLoading,\n  signin,\n}) => {\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup\n      .string()\n      .email('invalid email')\n      .required('username is required'),\n    password: Yup\n      .string()\n      .required('password is required'),\n  });\n\n  const loginButtonHandler = loginCred => {\n    signin(loginCred).then(() => {\n      history.push('/');\n    });\n  };\n\n  const classes = useStyles();\n  return (\n    <BlockUi\n      className={classes.blockUi}\n      tag=\"div\"\n      blocking={signInLoading}\n      loader={<Loader active type=\"line-scale-party\" color=\"#3f51b5\" />}\n      renderChildren={false}\n    >\n      <Login\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        loginButtonHandler={loginButtonHandler}\n      />\n    </BlockUi>\n  );\n};\n\nLoginContainer.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n  signin: PropTypes.func,\n  signInLoading: PropTypes.bool,\n};\n\nLoginContainer.defaultProps = {\n  signin: noop,\n  signInLoading: false,\n};\n\nconst mapStateToProps = state => ({\n  signInLoading: state.auth.signInLoading,\n  user: state.auth.user,\n});\n\nconst matchDispatchToProps = dispatch => ({\n  signin: loginCred => dispatch(signin(loginCred)),\n});\n\nexport default connect(\n  mapStateToProps,\n  matchDispatchToProps,\n)(withRouter(LoginContainer));\n","import * as actionTypes from './actionTypes';\nimport firebase from '../firebase/firebase';\n\nexport const signup = user => ({\n  type: actionTypes.SIGN_UP,\n  payload: firebase.auth().createUserWithEmailAndPassword(user.email, user.password),\n});\n\nexport const signin = loginCred => ({\n  type: actionTypes.SIGN_IN,\n  payload: firebase.auth().signInWithEmailAndPassword(loginCred.email, loginCred.password),\n});\n\nexport const logout = () => ({\n  type: actionTypes.SIGN_OUT,\n  payload: firebase.auth().signOut(),\n});\n\nexport const fetchLoggedInUserData = user => ({\n  type: actionTypes.FETCH_LOGGED_IN_USER,\n  payload: user,\n});\n","export const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_LOADING = 'SIGN_UP_LOADING';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_ERROR = 'SIGN_UP_ERROR';\n\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_IN_LOADING = 'SIGN_IN_LOADING';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_IN_ERROR = 'SIGN_IN_ERROR';\n\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const SIGN_OUT_LOADING = 'SIGN_OUT_LOADING';\nexport const SIGN_OUT_SUCCESS = 'SIGN_OUT_SUCCESS';\nexport const SIGN_OUT_ERROR = 'SIGN_OUT_ERROR';\n\nexport const FETCH_TODOS = 'FETCH_TODOS';\nexport const FETCH_TODOS_LOADING = 'FETCH_TODOS_LOADING';\nexport const FETCH_TODOS_SUCCESS = 'FETCH_TODOS_SUCCESS';\nexport const FETCH_TODOS_ERROR = 'FETCH_TODOS_ERROR';\n\nexport const ADD_TODO = 'ADD_TODO';\nexport const ADD_TODO_LOADING = 'ADD_TODO_LOADING';\nexport const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS';\nexport const ADD_TODO_ERROR = 'ADD_TODO_ERROR';\n\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const DELETE_TODO_LOADING = 'DELETE_TODO_LOADING';\nexport const DELETE_TODO_SUCCESS = 'DELETE_TODO_SUCCESS';\nexport const DELETE_TODO_ERROR = 'DELETE_TODO_ERROR';\n\nexport const MARK_TODO_DONE = 'MARK_TODO_DONE';\nexport const MARK_TODO_DONE_LOADING = 'MARK_TODO_DONE_LOADING';\nexport const MARK_TODO_DONE_SUCCESS = 'MARK_TODO_DONE_SUCCESS';\nexport const MARK_TODO_DONE_ERROR = 'MARK_TODO_DONE_ERROR';\n\nexport const UPDATE_TODO = 'UPDATE_TODO';\nexport const UPDATE_TODO_LOADING = 'UPDATE_TODO_LOADING';\nexport const UPDATE_TODO_SUCCESS = 'UPDATE_TODO_SUCCESS';\nexport const UPDATE_TODO_ERROR = 'UPDATE_TODO_ERROR';\n\nexport const SET_NOTIFICATION_TIME = 'SET_NOTIFICATION_TIME';\nexport const SET_NOTIFICATION_TIME_LOADING = 'SET_NOTIFICATION_TIME_LOADING';\nexport const SET_NOTIFICATION_TIME_SUCCESS = 'SET_NOTIFICATION_TIME_SUCCESS';\nexport const SET_NOTIFICATION_TIME_ERROR = 'SET_NOTIFICATION_TIME_ERROR';\n\nexport const UPDATE_NOTIFICATION_TIME = 'UPDATE_NOTIFICATION_TIME';\nexport const UPDATE_NOTIFICATION_TIME_LOADING = 'UPDATE_NOTIFICATION_TIME_LOADING';\nexport const UPDATE_NOTIFICATION_TIME_SUCCESS = 'UPDATE_NOTIFICATION_TIME_SUCCESS';\nexport const UPDATE_NOTIFICATION_TIME_ERROR = 'UPDATE_NOTIFICATION_TIME_ERROR';\n\nexport const FETCH_NOTIFICATION_TIME = 'FETCH_NOTIFICATION_TIME';\nexport const FETCH_NOTIFICATION_TIME_LOADING = 'FETCH_NOTIFICATION_TIME_LOADING';\nexport const FETCH_NOTIFICATION_TIME_SUCCESS = 'FETCH_NOTIFICATION_TIME_SUCCESS';\nexport const FETCH_NOTIFICATION_TIME_ERROR = 'FETCH_NOTIFICATION_TIME_ERROR';\n\nexport const FETCH_PREVIOUS_DAY_TODOS = 'FETCH_PREVIOUS_DAY_TODOS';\nexport const FETCH_PREVIOUS_DAY_TODOS_LOADING = 'FETCH_PREVIOUS_DAY_TODOS_LOADING';\nexport const FETCH_PREVIOUS_DAY_TODOS_SUCCESS = 'FETCH_PREVIOUS_DAY_TODOS_SUCCESS';\nexport const FETCH_PREVIOUS_DAY_TODOS_ERROR = 'FETCH_PREVIOUS_DAY_TODOS_ERROR';\n\nexport const ADD_PREVIOUS_DAY_TODOS = 'ADD_PREVIOUS_DAY_TODOS';\nexport const NO_ADD_PREVIOUS_DAY_TODOS = 'NO_ADD_PREVIOUS_DAY_TODOS';\n\nexport const OPEN_PENDING_TODO = 'OPEN_PENDING_TODO';\nexport const CLOSE_PENDING_TODO = 'CLOSE_PENDING_TODO';\n\nexport const MORNING_TIME_CHANGE = 'MORNING_TIME_CHANGE';\nexport const EVENING_TIME_CHANGE = 'EVENING_TIME_CHANGE';\n\nexport const FETCH_LOGGED_IN_USER = 'FETCH_LOGGED_IN_USER';\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\nexport const DATE_CHANGE = 'DATE_CHANGE';\nexport const COPY_TO_CLIPBOARD = 'COPY_TO_CLIPBOARD';\nexport const TOAST_CLOSE = 'TOAST_CLOSE';\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Grid from '@material-ui/core/Grid';\nimport { noop } from '../../utils';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Signup({\n  signupButtonHandler,\n  validationSchema,\n  initialValues,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <Formik\n          validateOnChange\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={data => {\n            signupButtonHandler(data);\n          }}\n        >\n          {({ errors, touched }) => (\n            <Form className={classes.form} noValidate autoComplete=\"off\">\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    name=\"email\"\n                    type=\"input\"\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    fullWidth\n                    autoComplete=\"email\"\n                    error={touched.email && Boolean(errors.email)}\n                    helperText={errors.email ? errors.email : ''}\n                    as={TextField}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    label=\"Password\"\n                    fullWidth\n                    autoComplete=\"password\"\n                    error={touched.password && Boolean(errors.password)}\n                    helperText={errors.password ? errors.password : ''}\n                    as={TextField}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Create Account\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"/login\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </Container>\n  );\n}\n\nSignup.propTypes = {\n  signupButtonHandler: PropTypes.func,\n  validationSchema: PropTypes.instanceOf(Object),\n  initialValues: PropTypes.instanceOf(Object),\n};\n\nSignup.defaultProps = {\n  signupButtonHandler: noop,\n  validationSchema: {},\n  initialValues: {},\n};\n\nexport default Signup;\n","/* eslint-disable no-shadow */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport { Loader } from 'react-loaders';\nimport 'loaders.css/loaders.min.css';\n\nimport { signup } from '../../redux/authActions';\nimport { noop } from '../../utils';\n\nimport Signup from './Signup';\n\nconst useStyles = makeStyles({\n  blockUi: {\n    minHeight: '100vh',\n  },\n});\n\nconst SignupContainer = ({\n  history,\n  signUpLoading,\n  signup,\n}) => {\n  const classes = useStyles();\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup\n      .string()\n      .email('email is not valid')\n      .required('email is required'),\n    password: Yup\n      .string()\n      .required('password is required'),\n  });\n\n  const signupButtonHandler = user => {\n    signup(user).then(() => {\n      history.push('/');\n    });\n  };\n\n  return (\n    <BlockUi\n      className={classes.blockUi}\n      tag=\"div\"\n      blocking={signUpLoading}\n      loader={<Loader active type=\"line-scale-party\" color=\"#3f51b5\" />}\n      renderChildren={false}\n    >\n      <Signup\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        signupButtonHandler={signupButtonHandler}\n      />\n    </BlockUi>\n  );\n};\n\nSignupContainer.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n  signup: PropTypes.func,\n  signUpLoading: PropTypes.bool,\n};\n\nSignupContainer.defaultProps = {\n  signup: noop,\n  signUpLoading: false,\n};\n\nconst mapStateToProps = state => ({\n  signUpLoading: state.auth.signUpLoading,\n});\n\nconst matchDispatchToProps = dispatch => ({\n  signup: user => dispatch(signup(user)),\n});\n\nexport default connect(\n  mapStateToProps,\n  matchDispatchToProps,\n)(withRouter(SignupContainer));\n","import moment from 'moment';\nimport firebase from '../firebase/firebase';\n\nconst db = firebase.firestore();\n\nconst get = async (email, date) => {\n  const getResponse = await db.collection('todosList').doc(email).collection(date)\n    .get()\n    .then(querySnapshot => {\n      const todoList = [];\n      querySnapshot.forEach(doc => {\n        todoList.push({\n          id: doc.id,\n          ...doc.data(),\n        });\n      });\n      return todoList;\n    })\n    .catch(err => console.log('Error while fetching collection from database', err));\n  return getResponse;\n};\n\nconst add = async (email, date, data) => {\n  const currentDate = moment(date).format('DDMMYYYY');\n  const createdAt = +new Date();\n  const getResponse = await db.collection('todosList').doc(email).collection(currentDate)\n    .add({\n      ...data,\n      isDone: false,\n      createdAt,\n    })\n    .then(docRef => ({\n      id: docRef.id,\n      isDone: false,\n      createdAt,\n      ...data,\n    }))\n    .catch(err => console.log('error', err));\n  return getResponse;\n};\n\nconst del = async (email, id, date) => {\n  const getResponse = await db.collection('todosList').doc(email).collection(date).doc(id)\n    .delete()\n    .then(() => ({\n      id,\n    }))\n    .catch(err => console.log('error', err));\n  return getResponse;\n};\n\nconst done = async (todo, email, date) => {\n  const getResponse = await db.collection('todosList').doc(email).collection(date).doc(todo.id)\n    .update({ isDone: !todo.isDone })\n    .then(() => ({\n      id: todo.id,\n      createdAt: todo.createdAt,\n    }));\n  return getResponse;\n};\n\nconst update = async (id, data, email, date) => {\n  const getResponse = await db.collection('todosList').doc(email).collection(date).doc(id)\n    .update({ todo: data.todo })\n    .then(() => ({\n      id,\n      data,\n    }));\n  return getResponse;\n};\n\nconst updateTime = async (email, mTime, eTime) => {\n  const getResponse = await db.collection('todosList').doc(email)\n    .update({ mTime, eTime });\n  return getResponse;\n};\n\nconst fetchTime = async email => {\n  const getResponse = await db.collection('todosList').doc(email)\n    .get()\n    .then(doc => ({\n      data: doc.data(),\n    }));\n  return getResponse;\n};\n\nconst setTime = async (email, mTime, eTime) => {\n  const getResponse = await db.collection('todosList').doc(email)\n    .set({ mTime, eTime });\n  return getResponse;\n};\n\nexport default {\n  get,\n  add,\n  del,\n  done,\n  update,\n  updateTime,\n  fetchTime,\n  setTime,\n};\n","import moment from 'moment';\n\nimport * as actionTypes from './actionTypes';\nimport api from '../utils/api';\n\nexport const fetchTodos = (user, date) => {\n  const currentDate = moment(date).format('DDMMYYYY');\n  return ({\n    type: actionTypes.FETCH_TODOS,\n    payload: api.get(user.email, currentDate),\n  });\n};\n\nexport const addTodo = (data, date, user) => ({\n  type: actionTypes.ADD_TODO,\n  payload: api.add(user.email, date, data),\n});\n\nexport const deleteTodo = (user, id, date) => {\n  const currentDate = moment(date).format('DDMMYYYY');\n  return ({\n    type: actionTypes.DELETE_TODO,\n    payload: api.del(user.email, id, currentDate),\n  });\n};\n\nexport const markDone = (todo, user, date) => {\n  const currentDate = moment(date).format('DDMMYYYY');\n  return ({\n    type: actionTypes.MARK_TODO_DONE,\n    payload: api.done(todo, user.email, currentDate),\n  });\n};\n\nexport const editTodo = id => ({\n  type: actionTypes.EDIT_TODO,\n  payload: {\n    id,\n  },\n});\n\nexport const cancelEdit = () => ({\n  type: actionTypes.CANCEL_EDIT,\n});\n\nexport const updateTodo = (id, data, user, date) => {\n  const currentDate = moment(date).format('DDMMYYYY');\n  return ({\n    type: actionTypes.UPDATE_TODO,\n    payload: api.update(id, data, user.email, currentDate),\n  });\n};\n\nexport const dateChange = date => ({\n  type: actionTypes.DATE_CHANGE,\n  payload: {\n    data: date,\n  },\n});\n\nexport const copyToClipboard = () => ({\n  type: actionTypes.COPY_TO_CLIPBOARD,\n});\n\nexport const toastClose = () => ({\n  type: actionTypes.TOAST_CLOSE,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Box from '@material-ui/core/Box';\n\nimport { noop } from '../../utils';\n\nconst useStyles = makeStyles(({\n  button: {\n    color: '#fff',\n    backgroundColor: red[400],\n    '&:hover': {\n      backgroundColor: red[500],\n    },\n  },\n}));\n\nfunction PendingTodoDialog({\n  yesButtonHandler,\n  noButtonHandler,\n  open,\n}) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={noButtonHandler}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          <Box color=\"primary.main\">PENDING TODOS?</Box>\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            There are some pending todos from previous day, want to carry over ?\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            className={classes.button}\n            onClick={noButtonHandler}\n          >\n            No\n          </Button>\n          <Button\n            onClick={yesButtonHandler}\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nPendingTodoDialog.propTypes = {\n  yesButtonHandler: PropTypes.func,\n  noButtonHandler: PropTypes.func,\n  open: PropTypes.bool,\n};\n\nPendingTodoDialog.defaultProps = {\n  yesButtonHandler: noop,\n  noButtonHandler: noop,\n  open: false,\n};\n\nexport default PendingTodoDialog;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport moment from 'moment';\nimport { noop, formatedDate } from '../../../../utils';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    padding: 0,\n  },\n  momentTag: {\n    fontSize: '0.8rem',\n  },\n  inline: {\n    display: 'inline',\n    fontSize: '0.9rem',\n  },\n  listItemTextLineThrough: {\n    color: '#999898',\n    textDecoration: 'line-through',\n    fontStyle: 'italic',\n  },\n  card: {\n    maxWidth: 250,\n    marginBottom: theme.spacing(2),\n  },\n  cardBackground: {\n    maxWidth: 250,\n    marginBottom: theme.spacing(2),\n    backgroundColor: '#ffffff98',\n  },\n  deleteButton: {\n    color: red[500],\n  },\n  greenButton: {\n    color: 'green',\n  },\n  chip: {\n    fontSize: '0.7rem !important',\n  },\n  chipIcon: {\n    fontSize: '0.9rem !important',\n  },\n  isHidden: {\n    display: 'none',\n  },\n}));\n\nfunction TodoCard({\n  deleteTodoButtonHandler,\n  markTodoDoneButtonHandler,\n  editTodoButtonHandler,\n  todo,\n  user,\n  date,\n  calendarStrings,\n  refresh,\n}) {\n  const classes = useStyles();\n  let createdTime = moment(todo.createdAt);\n  let allowEditTill = moment(todo.createdAt).add(2, 'hours');\n  useEffect(() => {\n    createdTime = moment(todo.createdAt);\n    allowEditTill = moment(todo.createdAt).add(2, 'hours');\n  }, [refresh]);\n  return (\n    <>\n      <List className={classes.root}>\n        <ListItem alignItems=\"flex-start\" className={classes.listItem}>\n          <Tooltip title={todo.isDone ? 'Todo Done' : 'Mark as Done'} arrow>\n            <IconButton onClick={event => markTodoDoneButtonHandler(event, todo)}>\n              {\n                todo.isDone\n                  ? (\n                    <CheckCircleIcon\n                      className={todo.isDone ? classes.greenButton : null}\n                    />\n                  )\n                  : <CheckCircleOutlineIcon />\n              }\n            </IconButton>\n          </Tooltip>\n          <ListItemText\n            className={todo.isDone ? classes.listItemTextLineThrough : null}\n            primary={todo.todo}\n            secondary={(\n              <>\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >\n                  {user.email}\n                </Typography>\n                &nbsp;&mdash;&nbsp;\n                <Moment\n                  className={classes.momentTag}\n                  calendar={calendarStrings}\n                >\n                  {todo.createdAt}\n                </Moment>\n              </>\n            )}\n          />\n          <ListItemSecondaryAction>\n            {\n              moment(date).isSameOrAfter(formatedDate(new Date()))\n              && (\n                <>\n                  {\n                    (moment(createdTime).isBefore(allowEditTill)\n                      && (allowEditTill > moment(+new Date()).toDate()))\n                    && (\n                      <>\n                        <Tooltip title=\"Edit\" arrow>\n                          <IconButton\n                            onClick={event => editTodoButtonHandler(event, todo)}\n                            className={todo.isDone ? classes.isHidden : null}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Delete\" arrow>\n                          <IconButton onClick={event => deleteTodoButtonHandler(event, todo.id)}>\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </>\n                    )\n                  }\n                </>\n              )\n            }\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" />\n      </List>\n    </>\n  );\n}\n\nTodoCard.propTypes = {\n  deleteTodoButtonHandler: PropTypes.func,\n  markTodoDoneButtonHandler: PropTypes.func,\n  editTodoButtonHandler: PropTypes.func,\n  todo: PropTypes.instanceOf(Object),\n  user: PropTypes.instanceOf(Object),\n  calendarStrings: PropTypes.instanceOf(Object),\n  date: PropTypes.string,\n  refresh: PropTypes.bool,\n};\n\nTodoCard.defaultProps = {\n  deleteTodoButtonHandler: noop,\n  markTodoDoneButtonHandler: noop,\n  editTodoButtonHandler: noop,\n  calendarStrings: {},\n  todo: [],\n  user: {},\n  date: '',\n  refresh: false,\n};\n\nexport default TodoCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Box from '@material-ui/core/Box';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { noop } from '../../utils';\n\nconst useStyles = makeStyles({\n  button: {\n    color: '#fff',\n    backgroundColor: red[400],\n    '&:hover': {\n      backgroundColor: red[500],\n    },\n  },\n});\n\nfunction ConfirmDeleteDialog({ handleClose, open, confirmDeleteDialogHandler }) {\n  const classes = useStyles();\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          <Box color=\"primary.main\">DELETE TODO ?</Box>\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This will permanently remove this todo!\n            Still want to Proceed?\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n          <Button\n            className={classes.button}\n            onClick={confirmDeleteDialogHandler}\n            variant=\"contained\"\n            startIcon={<DeleteIcon />}\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nConfirmDeleteDialog.propTypes = {\n  handleClose: PropTypes.func,\n  confirmDeleteDialogHandler: PropTypes.func,\n  open: PropTypes.bool,\n};\n\nConfirmDeleteDialog.defaultProps = {\n  handleClose: noop,\n  confirmDeleteDialogHandler: noop,\n  open: false,\n};\n\nexport default ConfirmDeleteDialog;\n","/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport TodoListItem from './TodoListItem';\n\nimport { deleteTodo, markDone, editTodo } from '../../../../redux/todoActions';\nimport { noop, formatedDate } from '../../../../utils';\nimport ConfirmDeleteDialog from '../../../../shared/Dialog/ConfirmDeleteDialog';\n\n\nconst TodoListItemContainer = ({\n  deleteTodo,\n  markDone,\n  editTodo,\n  user,\n  todo,\n  date,\n  refresh,\n\n}) => {\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [contactId, setContactId] = useState('');\n  const deleteTodoButtonHandler = (e, id) => {\n    setContactId(id);\n    setOpenDeleteDialog(true);\n  };\n\n  const markTodoDoneButtonHandler = (e, todo) => {\n    const createdDate = formatedDate(todo.createdAt);\n    if (createdDate === date) {\n      markDone(todo, user, date);\n    } else {\n      markDone(todo, user, createdDate);\n    }\n  };\n\n  const editTodoButtonHandler = (e, todo) => {\n    editTodo(todo.id);\n  };\n\n  const handleConfirmDeleteDialogClose = () => {\n    setOpenDeleteDialog(false);\n  };\n\n  const confirmDeleteDialogHandler = () => {\n    deleteTodo(user, contactId, date);\n    setOpenDeleteDialog(false);\n  };\n\n  const calendarStrings = {\n    lastDay: 'll [at] LT',\n    sameDay: '[Today at] LT',\n    nextDay: 'll [at] LT',\n    lastWeek: 'll [at] LT',\n    nextWeek: 'll [at] LT',\n    sameElse: 'll [at] LT',\n  };\n  return (\n    <div>\n      <ConfirmDeleteDialog\n        handleClose={handleConfirmDeleteDialogClose}\n        confirmDeleteDialogHandler={confirmDeleteDialogHandler}\n        open={openDeleteDialog}\n      />\n      <TodoListItem\n        calendarStrings={calendarStrings}\n        deleteTodoButtonHandler={deleteTodoButtonHandler}\n        markTodoDoneButtonHandler={markTodoDoneButtonHandler}\n        editTodoButtonHandler={editTodoButtonHandler}\n        todo={todo}\n        user={user}\n        date={date}\n        refresh={refresh}\n      />\n    </div>\n  );\n};\n\nTodoListItemContainer.propTypes = {\n  deleteTodo: PropTypes.func,\n  markDone: PropTypes.func,\n  editTodo: PropTypes.func,\n  user: PropTypes.instanceOf(Object),\n  todo: PropTypes.instanceOf(Object),\n  date: PropTypes.string,\n  refresh: PropTypes.bool,\n};\n\nTodoListItemContainer.defaultProps = {\n  deleteTodo: noop,\n  markDone: noop,\n  editTodo: noop,\n  user: {},\n  todo: {},\n  date: '',\n  refresh: false,\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  date: state.todo.date,\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTodo: (user, id, date) => dispatch(deleteTodo(user, id, date)),\n  markDone: (todo, user, date) => dispatch(markDone(todo, user, date)),\n  editTodo: id => dispatch(editTodo(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListItemContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport TodoListItemContainer from './TodoListItem/TodoListItemContainer';\nimport { noop } from '../../../utils';\n\nconst useStyles = makeStyles({\n  copyButton: {\n    margin: '7px 0',\n    backgroundColor: '#7986cb',\n    color: '#eee',\n    fontSize: 12,\n    '&:hover': {\n      backgroundColor: '#3f51b5',\n    },\n  },\n  todoList: {\n    maxHeight: 'calc(100vh - 161px)',\n    overflow: 'auto',\n    margin: '15px 0 8px',\n  },\n});\n\nfunction TodoList({\n  todos,\n  copyButtonHandler,\n  copyBtnText,\n  refresh,\n}) {\n  const classes = useStyles();\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        className={classes.copyButton}\n        startIcon={<FileCopyIcon />}\n        onClick={copyButtonHandler}\n        disabled={copyBtnText === 'Copied!'}\n      >\n        {copyBtnText}\n      </Button>\n      <div className={classes.todoList}>\n        {\n          todos\n          && todos.map(todo => (\n            <TodoListItemContainer refresh={refresh} todo={todo} key={todo.id} />\n          ))\n        }\n      </div>\n    </>\n  );\n}\n\nTodoList.propTypes = {\n  copyButtonHandler: PropTypes.func,\n  todos: PropTypes.instanceOf(Array),\n  copyBtnText: PropTypes.string,\n  refresh: PropTypes.bool,\n};\n\nTodoList.defaultProps = {\n  copyButtonHandler: noop,\n  todos: [],\n  copyBtnText: '',\n  refresh: false,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport '../assets/styles/0-modules/shared/NoData.css';\nimport { formatedDate } from '../utils';\n\nconst NoData = ({ date }) => (\n  <div className=\"no-data\">\n    <h2 className=\"heading\">\n      opps! No todos found\n      {' '}\n      <span className=\"road-block-emoji\" role=\"img\" aria-label=\"no-data\">🚧</span>\n    </h2>\n    {\n      moment(date).isBefore(formatedDate(new Date()))\n        ? <></>\n        : <p className=\"subHeading\">Please add todos!</p>\n    }\n  </div>\n);\n\nNoData.propTypes = {\n  date: PropTypes.string,\n};\n\nNoData.defaultProps = {\n  date: '',\n};\n\nconst mapStateToProps = state => ({\n  date: state.todo.date,\n});\n\nexport default connect(mapStateToProps)(NoData);\n","/* eslint-disable no-shadow */\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CronJob } from 'cron';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport { Loader } from 'react-loaders';\nimport 'loaders.css/loaders.min.css';\nimport copy from 'copy-to-clipboard';\n\nimport PendingTodoDialog from '../../../shared/Dialog/PendingTodoDialog';\nimport TodoList from './TodoList';\nimport NoData from '../../../shared/NoData';\nimport { copyToClipboard, toastClose } from '../../../redux/todoActions';\nimport {\n  addPreviousDayTodos,\n  noAddPreviousDayTodos,\n  openPendingTodo,\n  closePendingTodo,\n} from '../../../redux/previousdayActions';\nimport { noop, todoFormatter, copyTodoToast, checkForTime } from '../../../utils';\n\nconst useStyles = makeStyles({\n  blockUi: {\n    minHeight: '100vh',\n  },\n});\n\nconst TodoListContainer = ({\n  addPreviousDayTodos,\n  noAddPreviousDayTodos,\n  toastClose,\n  openPendingTodo,\n  closePendingTodo,\n  copyToClipboard,\n  todos,\n  previousDayTodos,\n  fetchTodoLoading,\n  deleteTodoLoading,\n  openPendingTodoDialog,\n  copyBtnText,\n  date,\n}) => {\n  const todosRef = useRef();\n  const classes = useStyles();\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    const job = new CronJob('00 */2 * * * *', (() => {\n      setRefresh(prevRefresh => !prevRefresh);\n    }));\n    job.start();\n  }, []);\n\n  useEffect(() => {\n    todosRef.current = todos;\n    const filteredTodos = todosRef.current.filter(todo => todo.isDone === false);\n    filteredTodos.map(todo => {\n      const job = new CronJob('*/10 * * * * *', (() => {\n        checkForTime(todo.todo);\n      }));\n      job.start();\n    });\n  }, [todos]);\n\n  useEffect(() => {\n    openPendingTodo();\n  }, []);\n\n  const copyButtonHandler = () => {\n    const formatedTodos = todoFormatter(todos);\n    copyToClipboard();\n    copyTodoToast(date, toastClose);\n    copy(formatedTodos);\n  };\n\n  const noButtonHandler = () => {\n    noAddPreviousDayTodos();\n    closePendingTodo();\n  };\n\n  const yesButtonHandler = () => {\n    addPreviousDayTodos();\n    closePendingTodo();\n  };\n\n  return (\n    <BlockUi\n      className={classes.blockUi}\n      tag=\"div\"\n      blocking={fetchTodoLoading || deleteTodoLoading}\n      loader={<Loader active type=\"line-scale-party\" color=\"#3f51b5\" />}\n      renderChildren={false}\n    >\n      {\n        (previousDayTodos && previousDayTodos.length !== 0)\n        && (\n          <PendingTodoDialog\n            noButtonHandler={noButtonHandler}\n            yesButtonHandler={yesButtonHandler}\n            open={openPendingTodoDialog}\n          />\n        )\n      }\n      {\n        (todos && todos.length !== 0 && !fetchTodoLoading)\n          ? (\n            <TodoList\n              todos={todos}\n              refresh={refresh}\n              copyButtonHandler={copyButtonHandler}\n              copyBtnText={copyBtnText}\n            />\n          )\n          : <NoData />\n      }\n    </BlockUi>\n  );\n};\n\nTodoListContainer.propTypes = {\n  copyToClipboard: PropTypes.func,\n  toastClose: PropTypes.func,\n  addPreviousDayTodos: PropTypes.func,\n  noAddPreviousDayTodos: PropTypes.func,\n  openPendingTodo: PropTypes.func,\n  closePendingTodo: PropTypes.func,\n  todos: PropTypes.instanceOf(Array),\n  previousDayTodos: PropTypes.instanceOf(Array),\n  fetchTodoLoading: PropTypes.bool,\n  deleteTodoLoading: PropTypes.bool,\n  openPendingTodoDialog: PropTypes.bool,\n  copyBtnText: PropTypes.string,\n  date: PropTypes.string,\n};\n\nTodoListContainer.defaultProps = {\n  copyToClipboard: noop,\n  toastClose: noop,\n  addPreviousDayTodos: noop,\n  noAddPreviousDayTodos: noop,\n  openPendingTodo: noop,\n  closePendingTodo: noop,\n  todos: [],\n  previousDayTodos: [],\n  fetchTodoLoading: false,\n  deleteTodoLoading: false,\n  openPendingTodoDialog: false,\n  copyBtnText: '',\n  date: '',\n};\n\nconst mapStateToProps = state => ({\n  todos: state.todo.todos,\n  fetchTodoLoading: state.todo.fetchTodoLoading,\n  deleteTodoLoading: state.todo.deleteTodoLoading,\n  copyBtnText: state.todo.copyBtnText,\n  copiedTodo: state.todo.copiedTodo,\n  date: state.todo.date,\n  openPendingTodoDialog: state.todo.openPendingTodoDialog,\n  previousDayTodos: state.todo.previousDayTodos,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  copyToClipboard: todos => dispatch(copyToClipboard(todos)),\n  toastClose: () => dispatch(toastClose()),\n  addPreviousDayTodos: () => dispatch(addPreviousDayTodos()),\n  noAddPreviousDayTodos: () => dispatch(noAddPreviousDayTodos()),\n  openPendingTodo: () => dispatch(openPendingTodo()),\n  closePendingTodo: () => dispatch(closePendingTodo()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListContainer);\n","import * as actionTypes from './actionTypes';\nimport api from '../utils/api';\n\nexport const openPendingTodo = () => ({\n  type: actionTypes.OPEN_PENDING_TODO,\n});\n\nexport const closePendingTodo = () => ({\n  type: actionTypes.CLOSE_PENDING_TODO,\n});\n\nexport const fetchPreviousDayTodos = (user, date) => ({\n  type: actionTypes.FETCH_PREVIOUS_DAY_TODOS,\n  payload: api.get(user.email, date),\n});\n\nexport const addPreviousDayTodos = () => ({\n  type: actionTypes.ADD_PREVIOUS_DAY_TODOS,\n});\n\nexport const noAddPreviousDayTodos = () => ({\n  type: actionTypes.NO_ADD_PREVIOUS_DAY_TODOS,\n});\n","import React from 'react';\nimport { Form, Formik, Field } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport moment from 'moment';\nimport { noop, formatedDate } from '../../../utils';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    width: 'auto',\n  },\n  inputForm2: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n  headerContainer: {\n    position: 'fixed',\n    bottom: '0',\n    width: '83.5vh',\n\n  },\n  form: {\n    display: 'grid',\n    gridTemplateColumns: '86% 14%',\n    alignItems: 'center',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  formCancelEdit: {\n    display: 'grid',\n    gridTemplateColumns: '78% 22%',\n    alignItems: 'center',\n    marginBottom: theme.spacing(1),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n  },\n  cancel: {\n    margin: theme.spacing(1),\n  },\n  update: {\n    margin: theme.spacing(1),\n  },\n  editButtons: {\n    display: 'flex',\n  },\n  formDivider: {\n    margin: 10,\n  },\n}));\n\nfunction AddTodo({\n  addTodoButtonHandler,\n  updateTodoButtonHandler,\n  cancelEditButtonHandler,\n  validationSchema,\n  initialValues,\n  isEdit,\n  date,\n}) {\n  const currentDate = formatedDate(new Date());\n  const classes = useStyles();\n  return (\n    <div className={classes.headerContainer}>\n      <Formik\n        enableReinitialize\n        validateOnChange\n        validateOnBlur={false}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(data, { resetForm }) => {\n          if (isEdit) {\n            updateTodoButtonHandler(data);\n          } else {\n            addTodoButtonHandler(data);\n          }\n          resetForm();\n        }}\n      >\n        {\n          ({ errors, touched }) => (\n            <>\n              {\n                moment(date).isBefore(currentDate)\n                  ? <></>\n                  : (\n                    <>\n                      <Form className={isEdit ? classes.formCancelEdit : classes.form} noValidate autoComplete=\"off\">\n                        <div>\n                          <Field\n                            name=\"todo\"\n                            type=\"input\"\n                            id=\"todo\"\n                            fullWidth\n                            variant=\"outlined\"\n                            label={isEdit ? 'Update Todo' : 'Add New Todo'}\n                            error={touched.todo && Boolean(errors.todo)}\n                            helperText={errors.todo ? errors.todo : ''}\n                            as={TextField}\n                          />\n                        </div>\n                        <div className={classes.buttons}>\n                          {\n                            isEdit\n                              ? (\n                                <div className={classes.editButtons}>\n                                  <div className={classes.update}>\n                                    <Fab\n                                      type=\"submit\"\n                                      size=\"small\"\n                                      color=\"secondary\"\n                                      aria-label=\"add\"\n                                    >\n                                      <SaveIcon />\n                                    </Fab>\n                                  </div>\n                                  <div className={classes.cancel}>\n                                    <Fab\n                                      type=\"submit\"\n                                      onClick={cancelEditButtonHandler}\n                                      size=\"small\"\n                                      color=\"primary\"\n                                      aria-label=\"add\"\n                                    >\n                                      <ClearIcon />\n                                    </Fab>\n                                  </div>\n                                </div>\n                              )\n                              : (\n                                <Fab\n                                  type=\"submit\"\n                                  color=\"primary\"\n                                  aria-label=\"add\"\n                                >\n                                  <AddIcon />\n                                </Fab>\n                              )\n                          }\n                        </div>\n                      </Form>\n                    </>\n                  )\n              }\n            </>\n          )\n        }\n      </Formik>\n    </div>\n  );\n}\n\nAddTodo.propTypes = {\n  addTodoButtonHandler: PropTypes.func,\n  updateTodoButtonHandler: PropTypes.func,\n  cancelEditButtonHandler: PropTypes.func,\n  validationSchema: PropTypes.instanceOf(Object),\n  initialValues: PropTypes.instanceOf(Object),\n  isEdit: PropTypes.bool,\n  date: PropTypes.string,\n};\n\nAddTodo.defaultProps = {\n  addTodoButtonHandler: noop,\n  updateTodoButtonHandler: noop,\n  cancelEditButtonHandler: noop,\n  validationSchema: {},\n  initialValues: {},\n  isEdit: false,\n  date: '',\n};\n\nexport default AddTodo;\n","/* eslint-disable no-shadow */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CronJob } from 'cron';\nimport * as Yup from 'yup';\n\nimport AddTodo from './AddTodo';\n\nimport { addTodo, updateTodo, cancelEdit } from '../../../redux/todoActions';\nimport { noop, addTodoToast, checkForTime } from '../../../utils';\n\nconst AddTodoContainer = ({\n  addTodo,\n  updateTodo,\n  cancelEdit,\n  user,\n  isEdit,\n  selectedTodo,\n  date,\n  todos,\n  deleteTodoLoading,\n  showTodoNotification,\n}) => {\n  const validationSchema = Yup.object().shape({\n    todo: Yup\n      .string()\n      .required('Todo is required'),\n  });\n\n  const addTodoButtonHandler = data => {\n    addTodo(data, date, user).then(() => {\n      addTodoToast(data.todo);\n    });\n  };\n\n  const updateTodoButtonHandler = data => {\n    updateTodo(selectedTodo.id, data, user, date);\n  };\n\n  const cancelEditButtonHandler = () => {\n    cancelEdit();\n  };\n\n  return (\n    <AddTodo\n      isEdit={isEdit}\n      date={date}\n      initialValues={{\n        todo: selectedTodo.todo || '',\n      }}\n      validationSchema={validationSchema}\n      addTodoButtonHandler={addTodoButtonHandler}\n      updateTodoButtonHandler={updateTodoButtonHandler}\n      cancelEditButtonHandler={cancelEditButtonHandler}\n    />\n  );\n};\n\nAddTodoContainer.propTypes = {\n  addTodo: PropTypes.func,\n  updateTodo: PropTypes.func,\n  cancelEdit: PropTypes.func,\n  user: PropTypes.instanceOf(Object),\n  isEdit: PropTypes.bool,\n  selectedTodo: PropTypes.instanceOf(Object),\n  date: PropTypes.string,\n};\n\nAddTodoContainer.defaultProps = {\n  addTodo: noop,\n  updateTodo: noop,\n  cancelEdit: noop,\n  user: {},\n  isEdit: false,\n  selectedTodo: {},\n  date: '',\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isEdit: state.todo.isEdit,\n  selectedTodo: state.todo.selectedTodo,\n  date: state.todo.date,\n  deleteTodoLoading: state.todo.deleteTodoLoading,\n  showTodoNotification: state.todo.showTodoNotification,\n  todos: state.todo.todos,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addTodo: (data, date, user) => dispatch(addTodo(data, date, user)),\n  updateTodo: (id, data, user, date) => dispatch(updateTodo(id, data, user, date)),\n  cancelEdit: () => dispatch(cancelEdit()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodoContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Divider from '@material-ui/core/Divider';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport TodayIcon from '@material-ui/icons/Today';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SettingsTwoToneIcon from '@material-ui/icons/SettingsTwoTone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\n\nimport { noop, formatedDate } from '../../utils';\nimport '../../assets/styles/0-modules/shared/Drawer/drawer.css';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    minHeight: 52,\n    padding: '0 10px',\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    color: red[500],\n  },\n  dateGridOne: {\n    display: 'grid',\n    gridTemplateColumns: '50px 130px',\n  },\n  dateDigit: {\n    textAlign: 'center',\n  },\n  settingsContainer: {\n    borderLeft: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  settingButton: {\n    backgroundColor: 'transparent !important',\n  },\n  dateGridTwo: {\n    paddingTop: '0.4rem',\n    fontSize: '1rem',\n  },\n  moment: {\n    fontSize: '2.5rem',\n  },\n  button: {\n    color: '#3f51b5',\n    textDecoration: 'none',\n    padding: theme.spacing(1),\n    borderRadius: '5px',\n  },\n  inline: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  listItemDatePicker: {\n    padding: 0,\n    margin: 0,\n    zoom: 0.8,\n  },\n  nextPrevButtons: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction DrawerContent({\n  settingsButtonHandler,\n  logoutButtonHandler,\n  handleDateChange,\n  goToTodayDateHandler,\n  prevButtonHandler,\n  nextButtonHandler,\n  date,\n}) {\n  const uid = localStorage.getItem('uid');\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.toolbar}>\n        <div className={classes.dateGridOne}>\n          <div className={classes.dateDigit}>\n            <Moment format=\"D\" className={classes.moment}>\n              {date || new Date()}\n            </Moment>\n          </div>\n          <div className={classes.dateGridTwo}>\n            <div>\n              <Moment format=\"dddd\">\n                {date || new Date()}\n              </Moment>\n            </div>\n            <div>\n              <Moment format=\"MMMM, YYYY\">\n                {date || new Date()}\n              </Moment>\n            </div>\n          </div>\n        </div>\n        <div className={classes.settingsContainer}>\n          <IconButton\n            type=\"button\"\n            onClick={settingsButtonHandler}\n            className={classes.settingButton}\n            aria-label=\"settings\"\n          >\n            <SettingsTwoToneIcon fontSize=\"large\" />\n          </IconButton>\n        </div>\n      </div>\n      <Divider />\n\n      {\n        (uid !== '' && uid !== null && uid !== undefined)\n        && (\n          <List>\n            <ListItem button onClick={logoutButtonHandler}>\n              <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n              <ListItemText primary=\"LOGOUT\" />\n            </ListItem>\n          </List>\n        )\n      }\n      <Divider />\n      <List>\n        <ListItem className={classes.listItemDatePicker}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} className={classes.muiPickerUtilsContainer}>\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"static\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline\"\n              label=\"Date picker inline\"\n              value={date}\n              maxDate={new Date()}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n          </MuiPickersUtilsProvider>\n        </ListItem>\n      </List>\n      <Divider />\n      <List className={classes.nextPrevButtons}>\n        <Fab\n          size=\"small\"\n          variant=\"extended\"\n          color=\"primary\"\n          aria-label=\"prev\"\n          className={classes.margin}\n          onClick={prevButtonHandler}\n        >\n          <ChevronLeftIcon />\n          Prev\n        </Fab>\n        <Fab\n          size=\"small\"\n          variant=\"extended\"\n          color=\"primary\"\n          aria-label=\"next\"\n          className={classes.margin}\n          onClick={nextButtonHandler}\n          disabled={(date === formatedDate(new Date()))}\n        >\n          Next\n          <ChevronRightIcon />\n        </Fab>\n      </List>\n      <Divider />\n      {\n        moment(date).isBefore(formatedDate(new Date()))\n        && (\n          <List>\n            <ListItem button onClick={goToTodayDateHandler}>\n              <ListItemIcon><TodayIcon /></ListItemIcon>\n              <ListItemText primary=\"Go to today\" />\n            </ListItem>\n          </List>\n        )\n      }\n    </div>\n  );\n}\n\nDrawerContent.propTypes = {\n  settingsButtonHandler: PropTypes.func,\n  logoutButtonHandler: PropTypes.func,\n  handleDateChange: PropTypes.func,\n  goToTodayDateHandler: PropTypes.func,\n  prevButtonHandler: PropTypes.func,\n  nextButtonHandler: PropTypes.func,\n  date: PropTypes.string,\n};\n\nDrawerContent.defaultProps = {\n  settingsButtonHandler: noop,\n  logoutButtonHandler: noop,\n  handleDateChange: PropTypes.noop,\n  prevButtonHandler: noop,\n  nextButtonHandler: noop,\n  date: '',\n  goToTodayDateHandler: noop,\n};\n\nexport default DrawerContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Box from '@material-ui/core/Box';\n\nimport { noop } from '../../utils';\n\nconst useStyles = makeStyles(theme => ({\n  timePicker: {\n    margin: theme.spacing(1),\n    maxWidth: '10rem',\n  },\n}));\n\nfunction SettingDialog({\n  saveButtonHandler,\n  handleMorningTimeChange,\n  handleEveningTimeChange,\n  handleClose,\n  changedMorningTime,\n  changedEveningTime,\n  open,\n}) {\n  const classes = useStyles();\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          <Box color=\"primary.main\">NOTIFICATION SETTING</Box>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Please select the time you want to see the notification!\n          </DialogContentText>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardTimePicker\n                className={classes.timePicker}\n                ampm\n                label=\"Morning Notification\"\n                value={changedMorningTime}\n                onChange={handleMorningTimeChange}\n              />\n              <KeyboardTimePicker\n                className={classes.timePicker}\n                ampm\n                label=\"Evening Notification\"\n                value={changedEveningTime}\n                onChange={handleEveningTimeChange}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={saveButtonHandler}\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nSettingDialog.propTypes = {\n  saveButtonHandler: PropTypes.func,\n  handleClose: PropTypes.func,\n  handleMorningTimeChange: PropTypes.func,\n  handleEveningTimeChange: PropTypes.func,\n  changedMorningTime: PropTypes.string,\n  changedEveningTime: PropTypes.string,\n  open: PropTypes.bool,\n};\n\nSettingDialog.defaultProps = {\n  saveButtonHandler: noop,\n  handleClose: noop,\n  handleMorningTimeChange: noop,\n  handleEveningTimeChange: noop,\n  changedMorningTime: '',\n  changedEveningTime: '',\n  open: false,\n};\n\nexport default SettingDialog;\n","/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport DrawerContent from './DrawerContent';\nimport SettingsDialog from '../Dialog/SettingsDialog';\n\nimport { logout } from '../../redux/authActions';\nimport { dateChange, fetchTodos } from '../../redux/todoActions';\nimport { addPreviousDayTodos } from '../../redux/previousdayActions';\nimport { morningTimeChange, eveningTimeChange, updateNotificationTime } from '../../redux/notificationActions';\nimport { noop, formatedDate } from '../../utils';\n\nconst DrawerContentContainer = ({\n  user,\n  date,\n  changedMorningTime,\n  changedEveningTime,\n  dateChange,\n  morningTimeChange,\n  eveningTimeChange,\n  logout,\n  fetchTodos,\n  previousDayTodos,\n  addPreviousDayTodos,\n  updateNotificationTime,\n  addPendingPreviousDayTodos,\n}) => {\n  const [openSettingsDialog, setOpenSettingsDialog] = useState(false);\n  const settingsButtonHandler = () => {\n    setOpenSettingsDialog(true);\n  };\n\n  const handleSettingsDialogClose = () => {\n    setOpenSettingsDialog(false);\n  };\n\n  const handleMorningTimeChange = date => {\n    morningTimeChange(date);\n  };\n\n  const handleEveningTimeChange = date => {\n    eveningTimeChange(date);\n  };\n\n  const saveButtonHandler = () => {\n    setOpenSettingsDialog(false);\n    updateNotificationTime(user, changedMorningTime, changedEveningTime);\n  };\n\n  const logoutButtonHandler = () => {\n    logout();\n  };\n\n  const handleDateChange = date => {\n    const newDate = formatedDate(date);\n    dateChange(newDate);\n    if (previousDayTodos !== 0\n      && (newDate === formatedDate(new Date()))\n      && addPendingPreviousDayTodos) {\n      fetchTodos(user, date).then(() => {\n        addPreviousDayTodos();\n      });\n    } else {\n      fetchTodos(user, date);\n    }\n  };\n\n  const goToTodayDateHandler = () => {\n    handleDateChange(new Date());\n  };\n\n  const prevButtonHandler = () => {\n    handleDateChange(moment(date).subtract(1, 'days').format());\n  };\n\n  const nextButtonHandler = () => {\n    handleDateChange(moment(date).add(1, 'days').format());\n  };\n\n  return (\n    <div>\n      <SettingsDialog\n        changedMorningTime={changedMorningTime}\n        changedEveningTime={changedEveningTime}\n        open={openSettingsDialog}\n        handleClose={handleSettingsDialogClose}\n        saveButtonHandler={saveButtonHandler}\n        handleMorningTimeChange={handleMorningTimeChange}\n        handleEveningTimeChange={handleEveningTimeChange}\n      />\n      <DrawerContent\n        date={date}\n        settingsButtonHandler={settingsButtonHandler}\n        logoutButtonHandler={logoutButtonHandler}\n        handleDateChange={handleDateChange}\n        goToTodayDateHandler={goToTodayDateHandler}\n        prevButtonHandler={prevButtonHandler}\n        nextButtonHandler={nextButtonHandler}\n      />\n    </div>\n  );\n};\n\nDrawerContentContainer.propTypes = {\n  logout: PropTypes.func,\n  morningTimeChange: PropTypes.func,\n  eveningTimeChange: PropTypes.func,\n  dateChange: PropTypes.func,\n  fetchTodos: PropTypes.func,\n  addPreviousDayTodos: PropTypes.func,\n  updateNotificationTime: PropTypes.func,\n  user: PropTypes.instanceOf(Object),\n  previousDayTodos: PropTypes.instanceOf(Array),\n  date: PropTypes.string,\n  changedMorningTime: PropTypes.string,\n  changedEveningTime: PropTypes.string,\n  addPendingPreviousDayTodos: PropTypes.bool,\n};\n\nDrawerContentContainer.defaultProps = {\n  logout: noop,\n  morningTimeChange: noop,\n  eveningTimeChange: noop,\n  dateChange: noop,\n  fetchTodos: noop,\n  addPreviousDayTodos: noop,\n  updateNotificationTime: noop,\n  user: {},\n  previousDayTodos: [],\n  date: '',\n  changedMorningTime: '',\n  changedEveningTime: '',\n  addPendingPreviousDayTodos: false,\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  date: state.todo.date,\n  changedMorningTime: state.notification.changedMorningTime,\n  changedEveningTime: state.notification.changedEveningTime,\n  todos: state.todo.todos,\n  previousDayTodos: state.todo.previousDayTodos,\n  previousDay: state.todo.previousDay,\n  addPendingPreviousDayTodos: state.todo.addPendingPreviousDayTodos,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  morningTimeChange: date => dispatch(morningTimeChange(date)),\n  eveningTimeChange: date => dispatch(eveningTimeChange(date)),\n  logout: () => dispatch(logout()),\n  dateChange: date => dispatch(dateChange(date)),\n  fetchTodos: (user, date) => dispatch(fetchTodos(user, date)),\n  addPreviousDayTodos: () => dispatch(addPreviousDayTodos()),\n  updateNotificationTime: (user, mTime, eTime) => (\n    dispatch(updateNotificationTime(user, mTime, eTime))\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerContentContainer);\n","import * as actionTypes from './actionTypes';\nimport api from '../utils/api';\n\nexport const morningTimeChange = date => ({\n  type: actionTypes.MORNING_TIME_CHANGE,\n  payload: {\n    data: date,\n  },\n});\n\nexport const eveningTimeChange = date => ({\n  type: actionTypes.EVENING_TIME_CHANGE,\n  payload: {\n    data: date,\n  },\n});\n\nexport const updateNotificationTime = (user, mTime, eTime) => ({\n  type: actionTypes.UPDATE_NOTIFICATION_TIME,\n  payload: api.updateTime(user.email, mTime, eTime),\n});\n\nexport const fetchNotificationTime = user => ({\n  type: actionTypes.FETCH_NOTIFICATION_TIME,\n  payload: api.fetchTime(user.email),\n});\n\nexport const setNotificationTime = (user, mTime, eTime) => ({\n  type: actionTypes.SET_NOTIFICATION_TIME,\n  payload: api.setTime(user.email, mTime, eTime),\n});\n","import React from 'react';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport DrawerContentContainer from '../../shared/DrawerContent/DrawerContentContainer';\n\nconst drawerWidth = 250;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction NavBar() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <DrawerContentContainer />\n      </Drawer>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport NavBar from './NavBar';\n\nconst NavBarContainer = () => (\n  <div>\n    <NavBar />\n  </div>\n);\n\nexport default NavBarContainer;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport TodoListContainer from './TodoList/TodoListContainer';\nimport AddTodoContainer from './AddTodo/AddTodoContainer';\nimport NavBarContainer from '../NavBar/NavBarContainer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  paper: {\n    backgroundColor: '#eee',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(200 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  content: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Home() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <NavBarContainer />\n      <main className={classes.content}>\n        <TodoListContainer />\n        <AddTodoContainer />\n      </main>\n    </div>\n  );\n}\n\nexport default Home;\n","/* eslint-disable no-shadow */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { CronJob } from 'cron';\n\nimport { fetchLoggedInUserData } from '../../redux/authActions';\nimport { fetchTodos } from '../../redux/todoActions';\nimport { fetchPreviousDayTodos } from '../../redux/previousdayActions';\nimport { fetchNotificationTime, setNotificationTime } from '../../redux/notificationActions';\nimport {\n  noop, notifyMe, previousDay, lastFriday, formatedTime,\n} from '../../utils';\nimport firebase from '../../firebase/firebase';\nimport Home from './Home';\n\nconst HomeContaciner = ({\n  fetchLoggedInUserData,\n  fetchTodos,\n  fetchPreviousDayTodos,\n  fetchNotificationTime,\n  setNotificationTime,\n  changedMorningTime,\n  changedEveningTime,\n  date,\n}) => {\n  const prevMTimeRef = useRef();\n  const prevETimeRef = useRef();\n\n  useEffect(() => {\n    if (formatedTime() > formatedTime(changedMorningTime)) {\n      notifyMe(formatedTime(changedMorningTime), formatedTime(changedEveningTime));\n    }\n  }, []);\n\n  useEffect(() => {\n    prevMTimeRef.current = changedMorningTime;\n    prevETimeRef.current = changedEveningTime;\n    const job = new CronJob('00 */1 * * * *', (() => {\n      const morningTime = formatedTime(prevMTimeRef.current);\n      const eveningTime = formatedTime(prevETimeRef.current);\n      const currentTime = formatedTime();\n      if (morningTime === currentTime || eveningTime === currentTime) {\n        notifyMe(morningTime, eveningTime);\n      }\n    }));\n    job.start();\n  }, [changedMorningTime, changedEveningTime]);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(currentUser => {\n      if (currentUser) {\n        fetchLoggedInUserData(currentUser);\n        fetchTodos(currentUser, date);\n        fetchNotificationTime(currentUser).then(res => {\n          if (res.value.data === undefined) {\n            setNotificationTime(currentUser, changedMorningTime, changedEveningTime);\n          }\n        });\n        if (moment(new Date()).format('dddd') === 'Monday') fetchPreviousDayTodos(currentUser, lastFriday);\n        else fetchPreviousDayTodos(currentUser, previousDay);\n      }\n    });\n  }, []);\n\n  return (\n    <Home />\n  );\n};\n\nHomeContaciner.propTypes = {\n  fetchLoggedInUserData: PropTypes.func,\n  fetchTodos: PropTypes.func,\n  fetchPreviousDayTodos: PropTypes.func,\n  fetchNotificationTime: PropTypes.func,\n  setNotificationTime: PropTypes.func,\n  date: PropTypes.string,\n  changedMorningTime: PropTypes.string,\n  changedEveningTime: PropTypes.string,\n};\n\nHomeContaciner.defaultProps = {\n  fetchLoggedInUserData: noop,\n  fetchTodos: noop,\n  fetchPreviousDayTodos: noop,\n  fetchNotificationTime: noop,\n  setNotificationTime: noop,\n  date: '',\n  changedMorningTime: '',\n  changedEveningTime: '',\n};\n\nconst mapStateToProps = state => ({\n  date: state.todo.date,\n  changedMorningTime: state.notification.changedMorningTime,\n  changedEveningTime: state.notification.changedEveningTime,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchLoggedInUserData: user => dispatch(fetchLoggedInUserData(user)),\n  fetchTodos: (user, date) => dispatch(fetchTodos(user, date)),\n  fetchPreviousDayTodos: (user, date) => dispatch(fetchPreviousDayTodos(user, date)),\n  fetchNotificationTime: user => dispatch(fetchNotificationTime(user)),\n  setNotificationTime: (user, mTime, eTime) => dispatch(setNotificationTime(user, mTime, eTime)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContaciner);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Auth from './ProtectedRoutes';\nimport LoginContainer from '../modules/Login/LoginContainer';\nimport SignupContainer from '../modules/Signup/SignupContainer';\nimport HomeContaciner from '../modules/Home/HomeContaciner';\n\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Auth(HomeContaciner)} />\n    <Route path=\"/login\" component={LoginContainer} />\n    <Route path=\"/signup\" component={SignupContainer} />\n  </Switch>\n);\n\nexport default Routes;\n","import * as actionTypes from './actionTypes';\n\nconst initialValues = {\n  user: {},\n  signUpLoading: false,\n  signInLoading: false,\n  signOutLoading: false,\n  signUpError: null,\n  signInError: null,\n  signOutError: null,\n};\n\nconst authReducer = (state = initialValues, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case actionTypes.SIGN_UP_LOADING:\n      return {\n        ...state,\n        signUpLoading: true,\n        signUpError: null,\n      };\n    case actionTypes.SIGN_UP_SUCCESS:\n      localStorage.setItem('uid', payload.user.uid);\n      return {\n        ...state,\n        signUpLoading: false,\n        signUpError: null,\n        userId: payload.user.uid,\n      };\n    case actionTypes.SIGN_UP_ERROR:\n      return {\n        ...state,\n        signUpLoading: false,\n        signUpError: payload.error,\n      };\n    case actionTypes.SIGN_IN_LOADING:\n      return {\n        ...state,\n        signInLoading: true,\n        signInError: null,\n      };\n    case actionTypes.SIGN_IN_SUCCESS:\n      localStorage.setItem('uid', payload.user.uid);\n      return {\n        ...state,\n        signInLoading: false,\n        signInError: null,\n        user: {\n          userId: payload.user.uid,\n          email: payload.user.email,\n        },\n      };\n    case actionTypes.SIGN_IN_ERROR:\n      return {\n        ...state,\n        signInLoading: false,\n        signInError: payload.error,\n      };\n    case actionTypes.SIGN_OUT_LOADING:\n      return {\n        ...state,\n        signOutLoading: true,\n        signOutError: null,\n      };\n    case actionTypes.SIGN_OUT_SUCCESS:\n      localStorage.clear();\n      return {\n        ...state,\n        signOutLoading: false,\n        signOutError: null,\n        user: {},\n      };\n    case actionTypes.SIGN_OUT_ERROR:\n      return {\n        ...state,\n        signOutLoading: false,\n        signOutError: payload.error,\n      };\n    case actionTypes.FETCH_LOGGED_IN_USER:\n      return {\n        ...state,\n        user: {\n          userId: payload.uid,\n          email: payload.email,\n        },\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default authReducer;\n","import * as actionTypes from './actionTypes';\nimport { formatedDate } from '../utils/index';\n\nconst initialValues = {\n  fetchTodoLoading: false,\n  addTodoLoading: false,\n  deleteTodoLoading: false,\n  markTodoDoneLoading: false,\n  updateTodoLoading: false,\n  fetchPreviouDayTodoLoading: false,\n  openPendingTodoDialog: false,\n  addPendingPreviousDayTodos: false,\n  showTodoNotification: false,\n  todos: [],\n  previousDayTodos: [],\n  isEdit: false,\n  selectedTodo: {},\n  date: formatedDate(new Date()),\n  copyBtnText: 'Copy to Clipboard',\n  toastClose: false,\n};\n\nconst todoReducer = (state = initialValues, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case actionTypes.ADD_TODO_LOADING:\n      return {\n        ...state,\n        addTodoLoading: true,\n      };\n    case actionTypes.ADD_TODO_SUCCESS:\n      return {\n        ...state,\n        addTodoLoading: false,\n        showTodoNotification: true,\n        todos: [\n          ...state.todos,\n          {\n            ...payload,\n          },\n        ],\n      };\n    case actionTypes.ADD_TODO_ERROR:\n      return {\n        ...state,\n        addTodoLoading: false,\n      };\n    case actionTypes.COPY_TO_CLIPBOARD:\n      return {\n        ...state,\n        copyBtnText: 'Copied!',\n      };\n    case actionTypes.TOAST_CLOSE:\n      return {\n        ...state,\n        copyBtnText: 'Copy to Clipboard',\n      };\n    case actionTypes.FETCH_TODOS_LOADING:\n      return {\n        ...state,\n        fetchTodoLoading: true,\n      };\n    case actionTypes.FETCH_TODOS_SUCCESS: {\n      return {\n        ...state,\n        fetchTodoLoading: false,\n        todos: payload\n          .slice()\n          .sort((a, b) => a.createdAt - b.createdAt),\n      };\n    }\n    case actionTypes.FETCH_TODOS_ERROR:\n      return {\n        ...state,\n        fetchTodoLoading: false,\n      };\n    case actionTypes.FETCH_PREVIOUS_DAY_TODOS_LOADING:\n      return {\n        ...state,\n        fetchPreviouDayTodoLoading: true,\n      };\n    case actionTypes.FETCH_PREVIOUS_DAY_TODOS_SUCCESS:\n      return {\n        ...state,\n        fetchPreviouDayTodoLoading: false,\n        previousDayTodos: payload.filter(todo => todo.isDone === false),\n      };\n    case actionTypes.FETCH_PREVIOUS_DAY_TODOS_ERROR:\n      return {\n        ...state,\n        fetchPreviouDayTodoLoading: false,\n      };\n    case actionTypes.ADD_PREVIOUS_DAY_TODOS:\n      return {\n        ...state,\n        addPendingPreviousDayTodos: true,\n        todos: [\n          ...state.todos,\n          ...state.previousDayTodos,\n        ],\n      };\n    case actionTypes.NO_ADD_PREVIOUS_DAY_TODOS:\n      return {\n        ...state,\n        addPendingPreviousDayTodos: false,\n      };\n    case actionTypes.DELETE_TODO_LOADING:\n      return {\n        ...state,\n        deleteTodoLoading: true,\n      };\n    case actionTypes.DELETE_TODO_SUCCESS:\n      return {\n        ...state,\n        deleteTodoLoading: false,\n        showTodoNotification: false,\n        todos: state.todos.filter(todo => todo.id !== payload.id),\n      };\n    case actionTypes.DELETE_TODO_ERROR:\n      return {\n        ...state,\n        deleteTodoLoading: false,\n      };\n    case actionTypes.MARK_TODO_DONE_LOADING:\n      return {\n        ...state,\n        markTodoDoneLoading: true,\n      };\n    case actionTypes.MARK_TODO_DONE_SUCCESS:\n      return {\n        ...state,\n        markTodoDoneLoading: false,\n        showTodoNotification: false,\n        todos: state.todos.map(todo => (\n          (todo.createdAt === payload.createdAt)\n            ? {\n              ...todo,\n              isDone: !todo.isDone,\n            }\n            : todo)),\n        previousDayTodos: state.previousDayTodos.map(todo => (\n          (todo.createdAt === payload.createdAt)\n            ? {\n              ...todo,\n              isDone: !todo.isDone,\n            }\n            : todo)),\n      };\n    case actionTypes.MARK_TODO_DONE_ERROR:\n      return {\n        ...state,\n        markTodoDoneLoading: false,\n      };\n    case actionTypes.EDIT_TODO:\n      return {\n        ...state,\n        isEdit: true,\n        selectedTodo: state.todos.filter(todo => todo.id === payload.id)[0],\n      };\n    case actionTypes.CANCEL_EDIT:\n      return {\n        ...state,\n        isEdit: false,\n        selectedTodo: {},\n      };\n    case actionTypes.UPDATE_TODO_LOADING:\n      return {\n        ...state,\n        updateTodoLoading: true,\n      };\n    case actionTypes.UPDATE_TODO_SUCCESS:\n      return {\n        ...state,\n        updateTodoLoading: false,\n        isEdit: false,\n        todos: state.todos.map(todo => (\n          (todo.id === payload.id)\n            ? {\n              ...todo,\n              todo: payload.data.todo,\n            }\n            : todo\n        )),\n        selectedTodo: {},\n      };\n    case actionTypes.UPDATE_TODO_ERROR:\n      return {\n        ...state,\n        updateTodoLoading: false,\n      };\n    case actionTypes.DATE_CHANGE:\n      return {\n        ...state,\n        date: formatedDate(payload.data),\n        copyBtnText: 'Copy to Clipboard',\n      };\n    case actionTypes.OPEN_PENDING_TODO:\n      return {\n        ...state,\n        openPendingTodoDialog: true,\n      };\n    case actionTypes.CLOSE_PENDING_TODO:\n      return {\n        ...state,\n        openPendingTodoDialog: false,\n      };\n    case actionTypes.SIGN_OUT_LOADING:\n      return {\n        ...state,\n      };\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...state,\n        todos: [],\n      };\n    case actionTypes.SIGN_OUT_ERROR:\n      return {\n        ...state,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default todoReducer;\n","import moment from 'moment';\nimport * as actionTypes from './actionTypes';\nimport { defaultTime } from '../utils/index';\n\nconst initialValues = {\n  updateNotificationTimeLoading: false,\n  fetchNotificationTimeLoading: false,\n  setNotificationTimeLoading: false,\n  changedMorningTime: defaultTime('11:00:00'),\n  changedEveningTime: defaultTime('19:00:00'),\n};\n\nconst notificationReducer = (state = initialValues, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case actionTypes.SET_NOTIFICATION_TIME_LOADING:\n      return {\n        ...state,\n        setNotificationTimeLoading: true,\n      };\n    case actionTypes.SET_NOTIFICATION_TIME_SUCCESS:\n      return {\n        ...state,\n        setNotificationTimeLoading: false,\n      };\n    case actionTypes.SET_NOTIFICATION_TIME_ERROR:\n      return {\n        ...state,\n        setNotificationTimeLoading: false,\n      };\n    case actionTypes.UPDATE_NOTIFICATION_TIME_LOADING:\n      return {\n        ...state,\n        updateNotificationTimeLoading: true,\n      };\n    case actionTypes.UPDATE_NOTIFICATION_TIME_SUCCESS:\n      return {\n        ...state,\n        updateNotificationTimeLoading: false,\n      };\n    case actionTypes.UPDATE_NOTIFICATION_TIME_ERROR:\n      return {\n        ...state,\n        updateNotificationTimeLoading: false,\n      };\n    case actionTypes.FETCH_NOTIFICATION_TIME_LOADING:\n      return {\n        ...state,\n        fetchNotificationTimeLoading: true,\n      };\n    case actionTypes.FETCH_NOTIFICATION_TIME_SUCCESS:\n      return {\n        ...state,\n        fetchNotificationTimeLoading: false,\n        changedMorningTime: (payload.data ? payload.data.mTime : state.changedMorningTime),\n        changedEveningTime: (payload.data ? payload.data.eTime : state.changedEveningTime),\n      };\n    case actionTypes.FETCH_NOTIFICATION_TIME_ERROR:\n      return {\n        ...state,\n        fetchNotificationTimeLoading: false,\n      };\n    case actionTypes.MORNING_TIME_CHANGE:\n      return {\n        ...state,\n        changedMorningTime: moment(payload.data).format(),\n      };\n    case actionTypes.EVENING_TIME_CHANGE:\n      return {\n        ...state,\n        changedEveningTime: moment(payload.data).format(),\n      };\n    case actionTypes.SIGN_OUT_LOADING:\n      return {\n        ...state,\n      };\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...state,\n        changedMorningTime: defaultTime('11:00:00'),\n        changedEveningTime: defaultTime('19:00:00'),\n      };\n    case actionTypes.SIGN_OUT_ERROR:\n      return {\n        ...state,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default notificationReducer;\n","import { combineReducers } from 'redux';\n\nimport authReducer from './redux/authReducer';\nimport todoReducer from './redux/todoReducers';\nimport notificationReducer from './redux/notificationReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todo: todoReducer,\n  notification: notificationReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { createPromise } from 'redux-promise-middleware';\n\nimport './App.css';\nimport { ToastContainer } from 'react-toastify';\nimport Routes from './routes/Routes';\nimport rootReducer from './rootReducer';\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    composeWithDevTools(applyMiddleware(\n      thunk,\n      createPromise({ promiseTypeSuffixes: ['LOADING', 'SUCCESS', 'ERROR'] }),\n    )),\n  ),\n);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <ToastContainer closeButton={false} />\n        <Routes />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}